'use strict'
const fs = require('fs')
const path = require('path')
const BaseController = require('./base')

{% set ModelName = modelName | upperFirstLetter %}

/**
 * @apiDefine {{apiGroupValue}}
 * {{apiGroupLabel}}
 */
class {{controllerClass}} extends BaseController {
  constructor(ctx) {
    super(ctx)
  }

  /**
   * @api {get} {{apiBase}}/{{modelName}}s 获取{{modelText}}列表
   * @apiVersion {{apiVersion}}
   * @apiGroup {{apiGroupValue}}
   * @apiDescription 获取{{modelText}}列表
{% for filed in modelFields %}
{% if filed.filterable %}
   * @apiParam { {{filed.type}} } [{{filed.name}}] (query参数) {{filed.comment}}
{% endif %}
{% endfor %}
   * @apiUse pagination
   * @apiUse pageResult
   * @apiUse {{modelName}}ResponseEntity
   */
  async get{{ModelName}}List () {
    let res = await this.service.{{servicePath}}.get{{ModelName}}List(this.queryParams)
    this.restful.success(res)
  }

  /**
   * @api {get} {{apiBase}}/{{modelName}}s/:id 获取{{modelText}}详情
   * @apiVersion {{apiVersion}}
   * @apiGroup {{apiGroupValue}}
   * @apiDescription 获取{{modelText}}详情
   * @apiParam {Integer} id (path参数){{modelText}}id
   * @apiUse {{modelName}}ResponseEntity
   */
  async get{{ModelName}}Detail () {
    const { id } = this.pathParams
    const res = await this.service.{{servicePath}}.get{{ModelName}}(id)
    this.restful.success(res)
  }

  /**
   * @api {post} {{apiBase}}/{{modelName}}s 创建{{modelText}}
   * @apiVersion {{apiVersion}}
   * @apiGroup {{apiGroupValue}}
   * @apiDescription 创建{{modelText}}
   * @apiUse {{modelName}}RequestEntity
   * @apiUse {{modelName}}ResponseEntity
   */
  async create{{ModelName}} () {
    const res = await this.service.{{servicePath}}.add{{ModelName}}(this.requestBody)
    this.restful.created(res)
  }

  /**
   * @api {put} {{apiBase}}/{{modelName}}s/:id 修改{{modelText}}
   * @apiVersion {{apiVersion}}
   * @apiGroup {{apiGroupValue}}
   * @apiDescription 修改{{modelText}}
   * @apiParam {Integer} id (path参数){{modelText}}id
   * @apiUse {{modelName}}RequestEntity
   * @apiUse {{modelName}}ResponseEntity
   */
  async modify{{ModelName}} () {
    const { id } = this.pathParams
    const res = await this.service.{{servicePath}}.modify{{ModelName}}(id, this.requestBody)
    this.restful.success(res)
  }

  /**
   * @api {delete} {{apiBase}}/{{modelName}}s/:id 删除{{modelText}}
   * @apiVersion {{apiVersion}}
   * @apiGroup {{apiGroupValue}}
   * @apiDescription 根据 id 删除一条{{modelText}}
   * @apiParam {Integer} id (path参数){{modelText}}id
   */
  async delete{{ModelName}} () {
    const { id } = this.pathParams
    await this.service.{{servicePath}}.delete{{ModelName}}(id)
    this.restful.deleted()
  }
}

module.exports = {{controllerClass}}